# Xamarin.Android and Xamarin.iOS
# Build a Xamarin.Android and Xamarin.iOS app.
# Add steps that test, sign, and distribute the app, save build artifacts, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/xamarin

jobs:

- job: iOS
  pool:
    vmImage: 'macOS-10.15'

  steps:
  # To manually select a Xamarin SDK version on the Hosted macOS agent, enable this script with the SDK version you want to target
  # https://go.microsoft.com/fwlink/?linkid=871629
  - script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_4_1 
    displayName: 'Select Xamarin SDK version'
    enabled: false

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'

  # Install Apple certificate
  # Install an Apple certificate required to build on a macOS agent machine
  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: TestCertificate.p12
      certPwd: $(TestCert.Password)
      keychain: 'temp' # Options: default, temp, custom
      #keychainPassword: # Required when keychain == Custom || Keychain == Default
      #customKeychainPath: # Required when keychain == Custom
      #deleteCert: # Optional
      #deleteCustomKeychain: # Optional
      #signingIdentity: # Optional

  # Install Apple provisioning profile
  # Install an Apple provisioning profile required to build on a macOS agent machine
  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles' # Options: secureFiles, sourceRepository
      provProfileSecureFile: TestingPurposes.mobileprovision
      #provProfileSourceRepository: # Required when provisioningProfileLocation == SourceRepository
      removeProfile: true # Optional

  - task: XamariniOS@2
    inputs:
      solutionFile: '**/*.sln'
      configuration: 'Release'
      packageApp: true
      args: /p:IpaPackageDir="/Users/vsts/agent/2.153.2/work/1/a"

  # Publish build artifacts
  # Publish build artifacts to Azure Pipelines or a Windows file share
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'drop' 
      publishLocation: 'Container' # Options: container, filePath
      #targetPath: # Required when publishLocation == FilePath
      parallel: true # Optional
      #parallelCount: # Optional
      #fileCopyOptions: #Optional
